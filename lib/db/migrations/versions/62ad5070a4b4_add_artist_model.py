"""Add Artist Model

Revision ID: 62ad5070a4b4
Revises: c33d9874fb62
Create Date: 2024-06-12 16:13:14.389058

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

from sqlalchemy.engine.reflection import Inspector


# revision identifiers, used by Alembic.
revision: str = '62ad5070a4b4'
down_revision: Union[str, None] = 'c33d9874fb62'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def column_exists(connection, table_name, column_name):
    inspector = Inspector.from_engine(connection)
    columns = [col['name'] for col in inspector.get_columns(table_name)]
    return column_name in columns

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    if not column_exists(bind, "albums", "artist_id"):
        op.add_column('albums', sa.Column('artist_id', sa.Integer(), nullable=True))
        op.create_foreign_key(None, 'albums', 'artists', ['artist_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    if column_exists(bind, 'albums', 'artist_id'):
        op.drop_column('albums', 'artist_id')
    op.drop_constraint(None, 'albums', type_='foreignkey')
    # ### end Alembic commands ###
